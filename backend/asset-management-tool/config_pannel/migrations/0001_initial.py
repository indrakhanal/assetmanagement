# Generated by Django 3.1.7 on 2021-08-12 07:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SupplyBelts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('belt_type', models.CharField(max_length=50)),
                ('beneficiary_household', models.CharField(max_length=250)),
                ('beneficiary_population', models.CharField(max_length=250)),
                ('public_taps', models.IntegerField()),
                ('institutional_connection', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='WaterScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_name', models.CharField(max_length=250, unique=True, verbose_name='Name of Water Scheme')),
                ('location', models.CharField(max_length=250, verbose_name='Scheme Location')),
                ('beneficiary_household', models.IntegerField(verbose_name='Number of Households')),
                ('beneficiary_population', models.IntegerField(verbose_name='Number of Benfficiary Population')),
                ('public_taps', models.IntegerField(verbose_name='Number of Public Taps')),
                ('institutional_connection', models.IntegerField()),
                ('system_built_date', models.DateTimeField()),
                ('system_operation_from', models.DateTimeField()),
                ('system_operation_to', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='WaterTeriff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terif_type', models.CharField(choices=[('Use Based', 'USE BASED'), ('Fixed', 'FIXED')], max_length=50)),
                ('unit_from', models.IntegerField(blank=True, null=True)),
                ('unit_to', models.IntegerField(blank=True, null=True)),
                ('rate', models.FloatField()),
                ('year_from', models.DateField()),
                ('year_to', models.DateField()),
                ('estimated_paying_connection', models.FloatField()),
                ('water_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='water_terrif', to='config_pannel.waterscheme')),
            ],
        ),
        migrations.CreateModel(
            name='WaterSchemeLogTable',
            fields=[
                ('waterscheme_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config_pannel.waterscheme')),
                ('log_date', models.DateField()),
            ],
            bases=('config_pannel.waterscheme',),
        ),
        migrations.CreateModel(
            name='WaterTeriffLog',
            fields=[
                ('waterteriff_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config_pannel.waterteriff')),
                ('log_date', models.DateField()),
            ],
            bases=('config_pannel.waterteriff',),
        ),
        migrations.CreateModel(
            name='WaterSupplySchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_day', models.DateField()),
                ('to_day', models.DateField()),
                ('morning_from_time', models.TimeField()),
                ('morning_to_time', models.TimeField()),
                ('evening_from_time', models.TimeField()),
                ('evening_to_time', models.TimeField()),
                ('supply_belts', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supply_schedule_belts', to='config_pannel.supplybelts')),
                ('water_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='water_supply_schedule', to='config_pannel.waterscheme')),
            ],
        ),
        migrations.CreateModel(
            name='WaterSupplyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField()),
                ('date_to', models.DateField(blank=True, null=True)),
                ('total_supply', models.FloatField()),
                ('estimated_household', models.IntegerField()),
                ('estimated_beneficiaries', models.IntegerField()),
                ('is_daily', models.BooleanField(default=False)),
                ('supply_belts', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config_pannel.supplybelts')),
                ('water_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='water_supply_record', to='config_pannel.waterscheme')),
            ],
        ),
        migrations.CreateModel(
            name='WaterSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Water Source Name')),
                ('water_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='water_source', to='config_pannel.waterscheme')),
            ],
        ),
        migrations.AddField(
            model_name='supplybelts',
            name='water_scheme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supply_belts', to='config_pannel.waterscheme'),
        ),
        migrations.CreateModel(
            name='MinimumUnitRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lower_unit', models.IntegerField()),
                ('higher_unit', models.IntegerField()),
                ('water_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minimum_unit', to='config_pannel.waterscheme')),
            ],
        ),
    ]
